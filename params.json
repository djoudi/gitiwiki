{"name":"Gitiwiki","body":"# GitiWiki\r\n\r\nThis web application will be a wiki system, storing pages into a Git repository.\r\n\r\nNo release yet. Work in progress.\r\n\r\n## Features\r\n\r\nThis project is new, and for the moment, it only reads and display content from a Git repository.\r\nFeatures to create and modify wiki page with the browser will be provided later (Contributions are welcomed).\r\n\r\nMain existing features:\r\n\r\n- Support of the Dokuwiki syntax and extended tags (support of others wiki syntaxes is planned of course);\r\n- user protocols for links: you can define \"protocols\" for urls to have aliases to real urls;\r\n- store anything in your repository and where you want: images, pdf, xml files etc.. ;\r\n- hidden files: files or directory begining by a dot are not accessible with a browser;\r\n- support of several syntax or type file: assign a rendering engine to specific file extensions;\r\n- multiviews: in an URL, the extension part of a filename is not required, Gitiwiki will find the right file.\r\n  So later you can modify the extension (and so the wiki syntax for example) without modifying URL in other files;\r\n- support of redirections: you rename a file or move your page, even to an other site? Indicate it to Gitiwiki.\r\n- support of books: define a page including a summary, the files list of your book, and Gitiwiki adds\r\nnavigation bar automatically on web pages. In the future, you could also generate PDF.\r\n\r\nA demo ? Go to the web site of [Jelix manuals](http://docs.jelix.org/en) to see Gitiwiki in action.\r\n\r\n## Documentation\r\n\r\n- [Installation](docs/installation.md)\r\n- [Adding a repository](docs/repository.md) and what it should contain.\r\n- [URL in wiki content](docs/url-support.md)\r\n- [Wiki syntax](docs/syntax.md)\r\n- [Writing books](docs/books)\r\n- [Customization: design](docs/design)\r\n","tagline":"A wiki application using git as backend","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}